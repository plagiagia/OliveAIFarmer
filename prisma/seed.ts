import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Seeding database with Greek olive farm data...')

  // Create a test user (will be linked to Clerk later)
  const testUser = await prisma.user.upsert({
    where: { email: 'test@olivelog.gr' },
    update: {},
    create: {
      clerkId: 'test-clerk-id',
      email: 'test@olivelog.gr',
      firstName: 'ŒìŒπŒ¨ŒΩŒΩŒ∑œÇ',
      lastName: 'Œ†Œ±œÄŒ±Œ¥œåœÄŒøœÖŒªŒøœÇ',
    },
  })

  console.log('‚úÖ Created test user:', testUser.email)

  // Create a test farm
  const testFarm = await prisma.farm.upsert({
    where: { id: 'test-farm-id' },
    update: {},
    create: {
      id: 'test-farm-id',
      name: 'ŒïŒªŒ±ŒπœéŒΩŒ±œÇ ŒúŒµœÉœÉŒ∑ŒΩŒØŒ±œÇ',
      location: 'ŒöŒ±ŒªŒ±ŒºŒ¨œÑŒ±, ŒúŒµœÉœÉŒ∑ŒΩŒØŒ±',
      coordinates: '37.0421,22.1121',
      totalArea: 52, // 5.2 hectares = 52 stremmata
      description: 'Œ†Œ±œÅŒ±Œ¥ŒøœÉŒπŒ±Œ∫œåœÇ ŒµŒªŒ±ŒπœéŒΩŒ±œÇ ŒºŒµ Œ∫ŒøœÅœâŒΩŒ≠ŒπŒ∫Œ∑ œÄŒøŒπŒ∫ŒπŒªŒØŒ±',
      userId: testUser.id,
    },
  })

  console.log('‚úÖ Created test farm:', testFarm.name)

  // Create farm sections
  const northSection = await prisma.oliveSection.upsert({
    where: { id: 'north-section-id' },
    update: {},
    create: {
      id: 'north-section-id',
      name: 'ŒíœåœÅŒµŒπŒø Œ§ŒºŒÆŒºŒ±',
      area: 25, // 2.5 hectares = 25 stremmata
      soilType: 'ŒëœÅŒ≥ŒπŒªœéŒ¥ŒµœÇ',
      elevation: 120,
      description: 'Œ§Œø Œ≤œåœÅŒµŒπŒø œÑŒºŒÆŒºŒ± œÑŒøœÖ ŒµŒªŒ±ŒπœéŒΩŒ± ŒºŒµ œÄŒ±ŒªŒπœåœÑŒµœÅŒ± Œ¥Œ≠ŒΩœÑœÅŒ±',
      farmId: testFarm.id,
    },
  })

  const southSection = await prisma.oliveSection.upsert({
    where: { id: 'south-section-id' },
    update: {},
    create: {
      id: 'south-section-id',
      name: 'ŒùœåœÑŒπŒø Œ§ŒºŒÆŒºŒ±',
      area: 27, // 2.7 hectares = 27 stremmata
      soilType: 'ŒëŒºŒºœéŒ¥ŒµœÇ',
      elevation: 100,
      description: 'Œ§Œø ŒΩœåœÑŒπŒø œÑŒºŒÆŒºŒ± ŒºŒµ ŒΩŒµœåœÑŒµœÅŒ± Œ¥Œ≠ŒΩœÑœÅŒ±',
      farmId: testFarm.id,
    },
  })

  console.log('‚úÖ Created farm sections')

  // Create sample olive trees
  const trees = [
    {
      id: 'tree-001',
      treeNumber: '001',
      variety: 'ŒöŒøœÅœâŒΩŒ≠ŒπŒ∫Œ∑',
      plantingYear: 1995,
      age: 29,
      health: 'GOOD' as const,
      sectionId: northSection.id,
    },
    {
      id: 'tree-002',
      treeNumber: '002',
      variety: 'ŒöŒøœÅœâŒΩŒ≠ŒπŒ∫Œ∑',
      plantingYear: 1995,
      age: 29,
      health: 'EXCELLENT' as const,
      sectionId: northSection.id,
    },
    {
      id: 'tree-003',
      treeNumber: '003',
      variety: 'ŒöŒ±ŒªŒ±ŒºœéŒΩ',
      plantingYear: 2010,
      age: 14,
      health: 'HEALTHY' as const,
      sectionId: southSection.id,
    },
  ]

  for (const tree of trees) {
    await prisma.oliveTree.upsert({
      where: { id: tree.id },
      update: {},
      create: {
        ...tree,
        farmId: testFarm.id,
      },
    })
  }

  console.log('‚úÖ Created sample olive trees')

  // Create sample activities
  const activities = [
    {
      id: 'activity-001',
      type: 'WATERING' as const,
      title: 'Œ†œåœÑŒπœÉŒºŒ± ŒíœåœÅŒµŒπŒøœÖ Œ§ŒºŒÆŒºŒ±œÑŒøœÇ',
      description: 'Œ†œåœÑŒπœÉŒºŒ± œÑœâŒΩ Œ¥Œ≠ŒΩœÑœÅœâŒΩ œÉœÑŒø Œ≤œåœÅŒµŒπŒø œÑŒºŒÆŒºŒ±',
      date: new Date('2024-06-15'),
      duration: 120,
      cost: 50.0,
      weather: 'ŒóŒªŒπœåŒªŒøœÖœÉœÑŒøœÇ, 28¬∞C',
      completed: true,
    },
    {
      id: 'activity-002',
      type: 'PRUNING' as const,
      title: 'ŒöŒªŒ¨Œ¥ŒµŒºŒ± ŒßŒµŒπŒºŒµœÅŒπŒΩœå',
      description: 'ŒöŒªŒ¨Œ¥ŒµŒºŒ± Œ≥ŒπŒ± Œ∫Œ±ŒªœçœÑŒµœÅŒ∑ œÄŒ±œÅŒ±Œ≥œâŒ≥ŒÆ',
      date: new Date('2024-02-10'),
      duration: 480,
      cost: 200.0,
      weather: 'Œ£œÖŒΩŒΩŒµœÜŒπŒ¨, 12¬∞C',
      completed: true,
    },
    {
      id: 'activity-003',
      type: 'FERTILIZING' as const,
      title: 'ŒõŒØœÄŒ±ŒΩœÉŒ∑ ŒÜŒΩŒøŒπŒæŒ∑',
      description: 'ŒïœÜŒ±œÅŒºŒøŒ≥ŒÆ ŒøœÅŒ≥Œ±ŒΩŒπŒ∫Œøœç ŒªŒπœÄŒ¨œÉŒºŒ±œÑŒøœÇ',
      date: new Date('2024-04-20'),
      duration: 180,
      cost: 150.0,
      weather: 'ŒúŒ≠œÑœÅŒπŒøœÇ Œ¨ŒΩŒµŒºŒøœÇ, 20¬∞C',
      completed: true,
    },
  ]

  for (const activity of activities) {
    await prisma.activity.upsert({
      where: { id: activity.id },
      update: {},
      create: {
        ...activity,
        farmId: testFarm.id,
      },
    })
  }

  console.log('‚úÖ Created sample activities')

  // Create sample harvest
  const harvest = await prisma.harvest.upsert({
    where: { id: 'harvest-2023' },
    update: {},
    create: {
      id: 'harvest-2023',
      year: 2023,
      startDate: new Date('2023-11-01'),
      endDate: new Date('2023-11-15'),
      totalYield: 1250.5,
      qualityGrade: 'ŒïŒæŒ±ŒπœÅŒµœÑŒπŒ∫œå',
      oilExtracted: 187.5,
      oilYieldPercent: 15.0,
      notes: 'ŒïŒæŒ±ŒπœÅŒµœÑŒπŒ∫ŒÆ œáœÅŒøŒΩŒπŒ¨ ŒºŒµ Œ∫Œ±ŒªŒÆ œÄŒøŒπœåœÑŒ∑œÑŒ± ŒµŒªŒ±ŒπŒøŒªŒ¨Œ¥ŒøœÖ',
      completed: true,
      farmId: testFarm.id,
    },
  })

  console.log('‚úÖ Created sample harvest')

  console.log('üéâ Database seeding completed successfully!')
}

main()
  .then(async () => {
    await prisma.$disconnect()
  })
  .catch(async (e) => {
    console.error('‚ùå Error during seeding:', e)
    await prisma.$disconnect()
    process.exit(1)
  }) 